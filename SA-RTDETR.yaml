nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]


backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 1, C2f_DCMB, [128]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 1, C2f_DCMB, [256]]
  - [-1, 1, Conv, [384, 3, 2]]  # 5-P4/16
  - [-1, 1, C2f_DCMB, [384]]
  - [-1, 1, Conv, [384, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f_DCMB, [384]]

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 9 P5 input_proj.2
  - [-1, 1, TransformerEncoderLayer_Pola, [1024, 8]] # 10 P5
  - [-1, 1, Conv, [256, 1, 1]]  # 11 P5, Y5, lateral_convs.0

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 12 P4
  - [6, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 13 P4 input_proj.1
  - [[-2, -1], 1, Concat, [1]] # 14 P4
  - [-1, 3, RepC3, [256, 0.5]]  # 15 P4, fpn_blocks.0
  - [-1, 1, Conv, [256, 1, 1]]   # 16 P4, Y4, lateral_convs.1

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 17 P3
  - [2, 1, SPDConv, [128]]  # 18 P3 input_proj.0
  - [[-1, -2, 4], 1, Concat, [1]]  # 19 P3 cat backbone P4
  - [-1, 1, CSPOmniKernel, []] # 20 P3
  - [-1, 3, RepC3, [256, 0.5]]    # X3 (21), P3 fpn_blocks.1

  - [-1, 1, Conv, [256, 3, 2]]   # 22 P4, downsample_convs.0
  - [[-1, 16], 1, Concat, [1]]  # 23 P4 cat Y4
  - [-1, 3, RepC3, [256, 0.5]]    # F4 P4 (24), pan_blocks.0

  - [-1, 1, Conv, [256, 3, 2]]   # 25 P5, downsample_convs.1
  - [[-1, 11], 1, Concat, [1]]  # 26 P5 cat Y5
  - [-1, 3, RepC3, [256, 0.5]]    # F5 (27) P5, pan_blocks.1

  - [[21, 24, 27], 1, RTDETRDecoder, [nc, 256, 300, 4, 8, 3]]  # Detect(P3, P4, P5)